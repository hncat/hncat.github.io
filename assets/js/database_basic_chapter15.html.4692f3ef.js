"use strict";(self.webpackChunkfar_blog=self.webpackChunkfar_blog||[]).push([[92],{6262:(t,e)=>{e.A=(t,e)=>{const n=t.__vccOpts||t;for(const[t,a]of e)n[t]=a;return n}},5062:(t,e,n)=>{n.r(e),n.d(e,{comp:()=>o,data:()=>p});var a=n(641);const i=[(0,a.Fv)('<h2 id="_15-1-组合查询" tabindex="-1"><a class="header-anchor" href="#_15-1-组合查询"><span>15.1 组合查询</span></a></h2><div class="hint-container note"><p class="hint-container-title">注</p><p>多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询（compound query）。</p></div><p>有两种基本情况，其中需要使用组合查询：</p><ol><li>在单个查询中从不同的表返回类似结构的数据；</li><li>对单个表执行多个查询，按单个查询返回数据。</li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>组合查询和多个WHERE条件 多数情况下，组合相同表的两个查询完成的工作与具有多个WHERE子句条件的单条查询完成的工作相同。换句话说，任何具有多个WHERE子句的SELECT语句都可以作为一个组合查询给出，在以下段落中可以看到这一点。这两种技术在不同的查询中性能也不同。因此，应该试一下这两种技术，以确定对特定的查询哪一种性能更好。</p></div><h2 id="_15-2-创建组合查询" tabindex="-1"><a class="header-anchor" href="#_15-2-创建组合查询"><span>15.2 创建组合查询</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可用UNION操作符来组合数条SQL查询。利用UNION，可给出多条SELECT语句，将它们的结果组合成单个结果集。</p></div><h3 id="_15-2-1-使用union" tabindex="-1"><a class="header-anchor" href="#_15-2-1-使用union"><span>15.2.1 使用UNION</span></a></h3>',8)],r={},o=(0,n(6262).A)(r,[["render",function(t,e){return(0,a.uX)(),(0,a.CE)("div",null,i)}]]),p=JSON.parse('{"path":"/database/basic/chapter15.html","title":"第十五章 组合查询","lang":"zh-CN","frontmatter":{"title":"第十五章 组合查询","date":"2025-08-24T00:00:00.000Z","tags":["计算机基础","数据库"],"categories":"mysql","isOriginal":true,"order":15,"dir":{"order":15},"description":"15.1 组合查询 注 多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询（compound query）。 有两种基本情况，其中需要使用组合查询： 在单个查询中从不同的表返回类似结构的数据； 对单个表...","head":[["meta",{"property":"og:url","content":"https://hncat.github.io/database/basic/chapter15.html"}],["meta",{"property":"og:site_name","content":"far"}],["meta",{"property":"og:title","content":"第十五章 组合查询"}],["meta",{"property":"og:description","content":"15.1 组合查询 注 多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询（compound query）。 有两种基本情况，其中需要使用组合查询： 在单个查询中从不同的表返回类似结构的数据； 对单个表..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T09:59:58.000Z"}],["meta",{"property":"article:author","content":"Mr.far"}],["meta",{"property":"article:tag","content":"计算机基础"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2025-08-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T09:59:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第十五章 组合查询\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-24T09:59:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.far\\",\\"url\\":\\"https://hncat.github.io\\"}]}"]]},"headers":[{"level":2,"title":"15.1 组合查询","slug":"_15-1-组合查询","link":"#_15-1-组合查询","children":[]},{"level":2,"title":"15.2 创建组合查询","slug":"_15-2-创建组合查询","link":"#_15-2-创建组合查询","children":[{"level":3,"title":"15.2.1 使用UNION","slug":"_15-2-1-使用union","link":"#_15-2-1-使用union","children":[]}]}],"git":{"createdTime":1756029598000,"updatedTime":1756029598000,"contributors":[{"name":"far","email":"v19991123v@163.com","commits":1}]},"readingTime":{"minutes":1.21,"words":363},"filePathRelative":"database/basic/chapter15.md","localizedDate":"2025年8月24日","excerpt":"<h2>15.1 组合查询</h2>\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注</p>\\n<p>多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询（compound query）。</p>\\n</div>\\n<p>有两种基本情况，其中需要使用组合查询：</p>\\n<ol>\\n<li>在单个查询中从不同的表返回类似结构的数据；</li>\\n<li>对单个表执行多个查询，按单个查询返回数据。</li>\\n</ol>","autoDesc":true}')}}]);