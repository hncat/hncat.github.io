"use strict";(self.webpackChunkfar_blog=self.webpackChunkfar_blog||[]).push([[2843],{6262:(t,e)=>{e.A=(t,e)=>{const a=t.__vccOpts||t;for(const[t,i]of e)a[t]=i;return a}},3668:(t,e,a)=>{a.r(e),a.d(e,{comp:()=>l,data:()=>o});var i=a(641);const n=[(0,i.Fv)('<h2 id="_21-1-说明是存储过程" tabindex="-1"><a class="header-anchor" href="#_21-1-说明是存储过程"><span>21.1 说明是存储过程</span></a></h2><div class="hint-container note"><p class="hint-container-title">注</p><p>存储过程简单来说，就是为以后的使用而保存的一条或多条MySQL语句的集合。可将其视为批文件，虽然它们的作用不仅限于批处理。<br> 类比于编程语言的function</p></div><h2 id="_21-2-为什么要使用存储过程" tabindex="-1"><a class="header-anchor" href="#_21-2-为什么要使用存储过程"><span>21.2 为什么要使用存储过程</span></a></h2><ul><li>通过把处理封装在容易使用的单元中，简化复杂的操作。</li><li>由于不要求反复建立一系列处理步骤，这保证了数据的完整性。如果所有开发人员和应用程序都使用同一（试验和测试）存储过程，则所使用的代码都是相同的。这一点的延伸就是防止错误。需要执行的步骤越多，出错的可能性就越大。防止错误保证了数据的一致性。</li><li>简化对变动的管理。如果表名、列名或业务逻辑（或别的内容）有变化，只需要更改存储过程的代码。使用它的人员甚至不需要知道这些变化。这一点的延伸就是安全性。通过存储过程限制对基础数据的访问减少了数据讹误（无意识的或别的原因所导致的数据讹误）的机会。</li><li>提高性能。因为使用存储过程比使用单独的SQL语句要快。</li><li>存在一些只能用在单个请求中的MySQL元素和特性，存储过程可以使用它们来编写功能更强更灵活的代码。</li></ul><p>缺陷:</p><ul><li>一般来说，存储过程的编写比基本SQL语句复杂，编写存储过程需要更高的技能，更丰富的经验。</li><li>你可能没有创建存储过程的安全访问权限。许多数据库管理员限制存储过程的创建权限，允许用户使用存储过程，但不允许他们创建存储过程。</li></ul><h2 id="_21-3-使用存储过程" tabindex="-1"><a class="header-anchor" href="#_21-3-使用存储过程"><span>21.3 使用存储过程</span></a></h2>',7)],r={},l=(0,a(6262).A)(r,[["render",function(t,e){return(0,i.uX)(),(0,i.CE)("div",null,n)}]]),o=JSON.parse('{"path":"/database/basic/chapter21.html","title":"第二十一章 存储过程","lang":"zh-CN","frontmatter":{"title":"第二十一章 存储过程","date":"2025-08-24T00:00:00.000Z","tags":["计算机基础","数据库"],"categories":"mysql","isOriginal":true,"order":21,"dir":{"order":21},"description":"21.1 说明是存储过程 注 存储过程简单来说，就是为以后的使用而保存的一条或多条MySQL语句的集合。可将其视为批文件，虽然它们的作用不仅限于批处理。 类比于编程语言的function 21.2 为什么要使用存储过程 通过把处理封装在容易使用的单元中，简化复杂的操作。 由于不要求反复建立一系列处理步骤，这保证了数据的完整性。如果所有开发人员和应用程序...","head":[["meta",{"property":"og:url","content":"https://hncat.github.io/database/basic/chapter21.html"}],["meta",{"property":"og:site_name","content":"far"}],["meta",{"property":"og:title","content":"第二十一章 存储过程"}],["meta",{"property":"og:description","content":"21.1 说明是存储过程 注 存储过程简单来说，就是为以后的使用而保存的一条或多条MySQL语句的集合。可将其视为批文件，虽然它们的作用不仅限于批处理。 类比于编程语言的function 21.2 为什么要使用存储过程 通过把处理封装在容易使用的单元中，简化复杂的操作。 由于不要求反复建立一系列处理步骤，这保证了数据的完整性。如果所有开发人员和应用程序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-24T15:09:03.000Z"}],["meta",{"property":"article:author","content":"Mr.far"}],["meta",{"property":"article:tag","content":"计算机基础"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2025-08-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-24T15:09:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二十一章 存储过程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-24T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-24T15:09:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.far\\",\\"url\\":\\"https://hncat.github.io\\"}]}"]]},"headers":[{"level":2,"title":"21.1 说明是存储过程","slug":"_21-1-说明是存储过程","link":"#_21-1-说明是存储过程","children":[]},{"level":2,"title":"21.2 为什么要使用存储过程","slug":"_21-2-为什么要使用存储过程","link":"#_21-2-为什么要使用存储过程","children":[]},{"level":2,"title":"21.3 使用存储过程","slug":"_21-3-使用存储过程","link":"#_21-3-使用存储过程","children":[]}],"git":{"createdTime":1756048143000,"updatedTime":1756048143000,"contributors":[{"name":"far","email":"v19991123v@163.com","commits":1}]},"readingTime":{"minutes":1.76,"words":527},"filePathRelative":"database/basic/chapter21.md","localizedDate":"2025年8月24日","excerpt":"<h2>21.1 说明是存储过程</h2>\\n<div class=\\"hint-container note\\">\\n<p class=\\"hint-container-title\\">注</p>\\n<p>存储过程简单来说，就是为以后的使用而保存的一条或多条MySQL语句的集合。可将其视为批文件，虽然它们的作用不仅限于批处理。<br>\\n类比于编程语言的function</p>\\n</div>\\n<h2>21.2 为什么要使用存储过程</h2>\\n<ul>\\n<li>通过把处理封装在容易使用的单元中，简化复杂的操作。</li>\\n<li>由于不要求反复建立一系列处理步骤，这保证了数据的完整性。如果所有开发人员和应用程序都使用同一（试验和测试）存储过程，则所使用的代码都是相同的。这一点的延伸就是防止错误。需要执行的步骤越多，出错的可能性就越大。防止错误保证了数据的一致性。</li>\\n<li>简化对变动的管理。如果表名、列名或业务逻辑（或别的内容）有变化，只需要更改存储过程的代码。使用它的人员甚至不需要知道这些变化。这一点的延伸就是安全性。通过存储过程限制对基础数据的访问减少了数据讹误（无意识的或别的原因所导致的数据讹误）的机会。</li>\\n<li>提高性能。因为使用存储过程比使用单独的SQL语句要快。</li>\\n<li>存在一些只能用在单个请求中的MySQL元素和特性，存储过程可以使用它们来编写功能更强更灵活的代码。</li>\\n</ul>","autoDesc":true}')}}]);